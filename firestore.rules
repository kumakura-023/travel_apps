rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 認証されていないユーザーはアクセス不可
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // ユーザーが指定されたuidと一致するか確認
    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // プランのオーナーかどうか確認
    function isPlanOwner(planData) {
      return isAuthenticated() && planData.ownerId == request.auth.uid;
    }
    
    // プランのメンバーかどうか確認
    function isPlanMember(planData) {
      return isAuthenticated() && request.auth.uid in planData.members;
    }
    
    // プランへのアクセス権限があるか確認
    function canAccessPlan(planData) {
      return isPlanOwner(planData) || isPlanMember(planData);
    }
    
    // ユーザードキュメント: 本人のみ読み書き可能
    match /users/{userId} {
      allow read: if isUser(userId);
      allow write: if isUser(userId);
    }
    
    // プランドキュメント
    match /plans/{planId} {
      // 読み取り: オーナーまたはメンバーのみ
      allow read: if isAuthenticated() && (
        resource == null || // 新規作成時
        canAccessPlan(resource.data)
      );
      
      // 作成: 認証されたユーザーなら誰でも可能
      allow create: if isAuthenticated() && 
        request.resource.data.ownerId == request.auth.uid && // 作成者がオーナー
        request.auth.uid in request.resource.data.members; // 作成者がメンバーに含まれる
      
      // 更新: オーナーまたはメンバーのみ
      allow update: if isAuthenticated() && 
        canAccessPlan(resource.data) && // 既存のアクセス権限を確認
        resource.data.ownerId == request.resource.data.ownerId && // オーナーは変更不可
        (!('members' in request.resource.data) || request.auth.uid in request.resource.data.members); // メンバーから自分を削除不可
      
      // 削除: オーナーのみ
      allow delete: if isPlanOwner(resource.data);
    }
    
    // 招待トークン（将来の実装用）
    match /invitations/{inviteId} {
      // 読み取り: 認証されたユーザーなら誰でも可能（トークンを知っている場合）
      allow read: if isAuthenticated();
      
      // 作成: プランのオーナーのみ
      allow create: if isAuthenticated() && 
        isPlanOwner(get(/databases/$(database)/documents/plans/$(request.resource.data.planId)).data);
      
      // 更新・削除: 作成者のみ
      allow update, delete: if isAuthenticated() && 
        resource.data.createdBy == request.auth.uid;
    }
  }
}